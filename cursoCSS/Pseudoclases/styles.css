/*
Pseudoclases:
Selector que se aplica cuando existe un cambio de estado o
se cumple una condición; se indican con :
*/

:root {
    --color: pink;
}

/*
:hover
:active
:visited
*/

.hover {
    display: inline-block;
    background: lightsalmon;
    width: 400px;
    height: 200px;
    margin-left: 50px;
    transition: all 1s;
}

.hover:hover {
    background: lightgreen;
    width: 800px;
    height: 400px;
}

.active {
    background: lightpink;
    width: 200px;
    height: 200px;
}

.active a:active {
    color: red;
}

.visited {
    background: lightcyan;
    width: 200px;
    height: 200px;
}

.visited a:visited {
    color: green;
}

.visited a:active {
    color: red;
}

/*
:target
:not
:empty
*/

.not {
    background: lightblue;
    width: 300px;
    height: 200px;
}

.not p:not(.pnot) {
    color: darkred;
}

.empty {
    background: lightskyblue;
}

/* Se aplica si la caja está vacía */
.empty:empty {
}

/*
:first-child
:last-child
*/

.child :first-child {
    background: lightgoldenrodyellow;
}

.child :last-child {
    background: lightcoral;
}

/*
:first-of-type
:last-of-type
*/

.child p:first-of-type {
    background: darkred;
}

.child p:last-of-type {
    background: lightgreen;
}

/*
:nth-child(even(pares) or odd(impares))
:nth-last-child(n (número para multiplicar))
*/

.nth-child :nth-child(5){
    background: red;
}

.nth-child :nth-child(n + 5):nth-child(even){
    background: lightpink;
}

.nth-child :nth-last-child(4){
    background: green;
}

/*
:nth-of-type
:nth-last-of-type
*/

.nth-of-type p:nth-of-type(3){
    color: lightgreen;
}
